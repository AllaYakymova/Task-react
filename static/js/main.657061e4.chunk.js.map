{"version":3,"sources":["store/constants/index.js","store/actions/actionsWithCheckedUsers/actionsWithCheckedUsers.js","components/Checkbox/CheckBox.js","components/UserCard/UsersCard.js","components/UsersList/UsersList.js","store/actions/getUsersList/getUsersList.js","components/Loaded/Loaded.js","components/EmployeesBirthday/EmployeesBirthday.js","pages/EmployeesPage/EmployeesPage.js","routers/AppRouters.js","App.js","reportWebVitals.js","store/reducers/getUsersListReducer/getUsersListReducer.js","store/reducers/actionsWithCheckedUsersReducer/actionsWithCheckedUsersReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["REQUEST_USERS_SUCCESS","REQUEST_USERS_ERROR","REQUEST_USERS_IN_PROCESS","SET_CHECKED_USER","DELETE_CHECKED_USER","toggleCheckedUser","checkedUsersId","id","dispatch","includes","newCheckedUsersId","type","payload","clearUser","filter","el","addUser","CheckBox","useSelector","store","actionsWithCheckedUsers","useState","checked","setChecked","useDispatch","name","onChange","e","target","UserCard","letterUsersList","list","map","user","className","lastName","firstName","UsersList","usersList","structuredList","setStructuredList","useEffect","filterElements","alphabet","start","end","alphaList","code","alpha","String","fromCharCode","toUpperCase","arr","filterArr","forEach","letterNameArr","startsWith","structuredUsersList","i","users","length","getUsersList","axios","get","then","res","data","catch","error","message","Loaded","isLoaded","EmployeesBirthday","monthsNum","setMonthsNum","dobUsers","setBdUsers","monthNames","compareNumbers","a","b","dobs","Map","find","dob","monthNumber","date","Date","getMonth","result","item","index","indexOf","sort","x","set","localStorage","setItem","JSON","stringify","implementLists","dobList","birthday","day","getDate","monthIndex","year","getFullYear","formatDate","style","listStyleType","EmployeesPage","setTimeout","mainPage","AppRoutes","exact","from","to","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStore","getUsersReducer","action","parse","getItem","actionsWithCheckedUsersReducer","rootReducer","combineReducers","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAaA,EAAwB,wBACxBC,EAAsB,sBACtBC,EAA2B,2BAC3BC,EAAmB,mBACnBC,EAAsB,sBCgBpBC,EAlBW,SAACC,EAAgBC,GACzC,OAAO,SAACC,GACN,GAAKF,EAAeG,SAASF,GAMtB,CAMLC,EAJkB,SAACE,GAAD,MAAwB,CACxCC,KAAMP,EACNQ,QAAQ,YAAKF,IAENG,CALeP,EAAeQ,QAAO,SAACC,GAAD,OAAQA,IAAOR,WAP7B,CAKhCC,EAJgB,SAACD,GAAD,MAAS,CACvBI,KAAMR,EACNS,QAAQ,GAAD,mBAAMN,GAAN,CAAsBC,KAEtBS,CAAQT,OCqBRU,EAzBE,SAAC,GAAY,IAAVV,EAAS,EAATA,GACZD,EAAiBY,aACrB,SAACC,GAAD,OAAWA,EAAMC,wBAAwBd,kBAFhB,EAIGe,mBAASf,EAAeG,SAASF,IAJpC,mBAIpBe,EAJoB,KAIXC,EAJW,KAKrBf,EAAWgB,cAEjB,OACE,uBACEC,KAAK,UACLd,KAAK,WACLJ,GAAIA,EACJe,QAASA,EACTI,SAAU,SAACC,GACTJ,EAAWI,EAAEC,OAAON,SACpBd,EAASH,EAAkBC,EAAgBC,QCMpCsB,EAtBE,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACWC,KAAI,SAACC,GAChC,OACE,qBAAkBC,UAAU,cAA5B,UACE,mCACGD,EAAKE,SADR,IACmBF,EAAKG,aAExB,cAAC,EAAD,CACE7B,GAAI0B,EAAK1B,GACT4B,SAAUF,EAAKE,SACfC,UAAWH,EAAKG,cAPXH,EAAK1B,OAYlB,OAAO,mCAAGuB,KCyCGO,EAxDG,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACSjB,mBAAS,IADlB,mBAC5BkB,EAD4B,KACZC,EADY,KAGnCC,qBAAU,WACR,IAAIV,EAAOW,EAAeJ,EAAWK,EAAS,GAAI,KAClDH,EAAkBT,KACjB,CAACO,IAEJ,IAAMK,EAAW,SAACC,EAAOC,GAEvB,IADA,IAAIC,EAAY,GACPC,EAAOH,EAAOG,GAAQF,EAAKE,IAAQ,CAC1C,IAAIC,EAAQC,OAAOC,aAAaH,GAAMI,cACtCL,EAAS,sBAAOA,GAAP,CAAkBE,IAE7B,OAAOF,GAGHJ,EAAiB,SAACU,EAAKC,GAC3B,IAAItB,EAAO,GAOX,OANAsB,EAAUC,SAAQ,SAACxC,GACjB,IAAIyC,EAAgBH,EAAItC,QAAO,SAACa,GAAD,OAC7BA,EAAEQ,SAASgB,cAAcK,WAAW1C,MAEtCiB,EAAI,sBAAOA,GAAP,CAAawB,OAEZxB,GAGH0B,EAAsBlB,EAAeP,KAAI,SAACc,EAAWY,GACzD,IAAIV,EAAQC,OAAOC,aAAaQ,EAAI,IAChCC,EACmB,IAArBb,EAAUc,OACR,yCAEA,cAAC,EAAD,CAAU7B,KAAMe,IAEpB,OACE,sBAAiBZ,UAAU,oBAA3B,UACE,oBAAIA,UAAU,cAAd,SAA6Bc,IAC7B,6BAAKW,MAFGX,MAOd,OACE,gCACE,4CACA,qBAAKd,UAAU,kBAAf,SAAkCuB,Q,iBCxBzBI,EAbM,WACnB,OAAO,SAACrD,GACNA,EAJ6B,CAAEG,KAAMT,IAKrC4D,IACGC,IAAI,kEACJC,MAAK,SAACC,GAZW,IAAC3B,EAajB9B,GAbiB8B,EAaQ2B,EAAIC,KAbG,CACtCvD,KAAMX,EACNY,QAAQ,YAAK0B,SAaR6B,OAAM,SAACxC,GAXQ,IAACyC,EAYf5D,GAZe4D,EAYQzC,EAAE0C,QAZC,CAAE1D,KAAMV,EAAqBW,QAASwD,UCOzDE,EAfA,WAGb,OAFiBpD,aAAY,SAACC,GAAD,OAAWA,EAAM0C,aAAaU,aAIvD,sBAAKrC,UAAU,UAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,uBC+FRsC,EAvGW,SAAC,GAAmB,IAAjBlC,EAAgB,EAAhBA,UACrBhC,EAAiBY,aACrB,SAACC,GAAD,OAAWA,EAAMC,wBAAwBd,kBAFA,EAITe,mBAAS,IAJA,mBAIpCoD,EAJoC,KAIzBC,EAJyB,OAKZrD,mBAAS,IALG,mBAKpCsD,EALoC,KAK1BC,EAL0B,KAOrCC,EAAa,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIC,EAAiB,SAACC,EAAGC,GACzB,OAAOD,EAAIC,GAGbvC,qBAAU,WACR,IAAIkB,EAAQ,GACRsB,EAAO,GACPjD,EAAM,IAAIkD,IACd5E,EAAegD,SAAQ,SAAC/C,GACtB,IAAI0B,EAAOK,EAAU6C,MAAK,SAACpE,GAAD,OAAQA,EAAGR,KAAOA,KAC5CoD,EAAK,sBAAOA,GAAP,CAAc1B,IACnBgD,EAAI,sBAAOA,GAAP,CAAahD,EAAKmD,SAExB,IAAIC,EAAcJ,EAAKjD,KAAI,SAACsD,GAAD,OAAU,IAAIC,KAAKD,GAAME,cAChDC,EAASJ,EACVvE,QAAO,SAAC4E,EAAMC,GAAP,OAAiBN,EAAYO,QAAQF,KAAUC,KACtDE,KAAKf,GAERW,EAAOnC,SAAQ,SAACvC,GACd,IAAI+E,EAAI,GACRnC,EAAML,SAAQ,SAACrB,GACT,IAAIsD,KAAKtD,EAAKmD,KAAKI,aAAezE,IACpC+E,EAAC,sBAAOA,GAAP,CAAU7D,IACXD,EAAI+D,IAAIhF,EAAI+E,UAIlBpB,EAAae,GACbb,EAAW5C,GACXgE,aAAaC,QAAQ,iBAAkBC,KAAKC,UAAU7F,MACrD,CAACA,EAAgBgC,IAEpB,IAOM8D,EAAiB3B,EAAUzC,KAAI,SAACjB,GACpC,IAAI4C,EAAQgB,EAASZ,IAAIhD,GACrBsF,EAAU,GAad,OAZA1C,EAAM3B,KAAI,SAACC,GACT,IAAIqE,EAXW,SAAChB,GAClB,IAAIiB,EAAMjB,EAAKkB,UACXC,EAAanB,EAAKE,WAClBkB,EAAOpB,EAAKqB,cAChB,MAAM,GAAN,OAAUJ,EAAV,YAAiB1B,EAAW4B,GAA5B,aAA4CC,EAA5C,SAOiBE,CAAW,IAAIrB,KAAKtD,EAAKmD,MACxC,OAAQiB,EAAO,sBACVA,GADU,CAEb,qBAAkBQ,MAAO,CAAEC,cAAe,UAA1C,UACE,mCACG7E,EAAKE,SADR,IACmBF,EAAKG,aACd,IAHZ,KAIKkE,IAJIrE,EAAK1B,SAShB,gCACE,6BAAKsE,EAAW9D,KAChB,6BAAKsF,MAFGtF,MAORsF,EACsB,IAA1B/F,EAAesD,OACb,uDAEA,qBAAK1B,UAAU,gBAAf,SAAgCkE,IAGpC,OACE,sBAAKlE,UAAU,YAAf,UACE,sDACCmE,MCpEQU,EAvBO,WACpB,IAAMzE,EAAYpB,aAAY,SAACC,GAC7B,OAAOA,EAAM0C,aAAavB,aAEtBiC,EAAWrD,aAAY,SAACC,GAAD,OAAWA,EAAM0C,aAAaU,YACrD/D,EAAWgB,cAEjBiB,qBAAU,WACRuE,YAAW,kBAAMxG,EAASqD,OAAiB,OAC1C,CAACrD,IAEJ,IAAMyG,EAAW1C,EACf,qCACE,cAAC,EAAD,CAAWjC,UAAWA,IACtB,cAAC,EAAD,CAAmBA,UAAWA,OAGhC,cAAC,EAAD,IAGF,OAAO,mCAAG2E,KCdGC,EATG,WAChB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,OAAK,EAACC,KAAK,IAAIC,GAAG,eAC5B,cAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,aAAaC,UAAWR,QCIjCS,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3D,MAAK,YAAkD,IAA/C4D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCDRO,EAAe,CACnB3F,UAAW,GACXiC,UAAU,EACVH,MAAO,IA2BM8D,EAxBS,WAAmC,IAAlC/G,EAAiC,uDAAzB8G,EAAcE,EAAW,uCACxD,OAAQA,EAAOxH,MACb,KAAKX,EACH,OAAO,2BACFmB,GADL,IAEEoD,UAAU,EACVjC,UAAW6F,EAAOvH,UAEtB,KAAKX,EACH,OAAO,2BACFkB,GADL,IAEEoD,UAAU,EACVH,MAAO+D,EAAOvH,UAElB,KAAKV,EACH,OAAO,2BACFiB,GADL,IAEEoD,UAAU,IAEd,QACE,OAAOpD,IC9BP8G,EAAe,CACnB3H,eAAgB4F,KAAKkC,MAAMpC,aAAaqC,QAAQ,oBAAsB,IAoBzDC,EAjBwB,WAAmC,IAAlCnH,EAAiC,uDAAzB8G,EAAcE,EAAW,uCACvE,OAAQA,EAAOxH,MACb,KAAKR,EAKL,KAAKC,EACH,OAAO,2BACFe,GADL,IAEEb,eAAgB6H,EAAOvH,UAE3B,QACE,OAAOO,ICbAoH,EAAcC,YAAgB,CACvC3E,aAAcqE,EACd9G,wBAAyBkH,I,QCHvBG,EAAWC,OAAOC,6BAA+BD,OAAOC,+BAAkC,SAAAC,GAAC,OAAIA,GAQtFzH,EAND0H,YACVN,EACAO,YAAQC,YAAgBC,KAAQP,ICApCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUhI,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINiI,SAASC,eAAe,SAG1B5B,M","file":"static/js/main.657061e4.chunk.js","sourcesContent":["export const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS'\r\nexport const REQUEST_USERS_ERROR = 'REQUEST_USERS_ERROR'\r\nexport const REQUEST_USERS_IN_PROCESS = 'REQUEST_USERS_IN_PROCESS'\r\nexport const SET_CHECKED_USER = 'SET_CHECKED_USER'\r\nexport const DELETE_CHECKED_USER = 'DELETE_CHECKED_USER'\r\n","import { SET_CHECKED_USER, DELETE_CHECKED_USER } from '../../constants'\r\n\r\nconst toggleCheckedUser = (checkedUsersId, id) => {\r\n  return (dispatch) => {\r\n    if (!checkedUsersId.includes(id)) {\r\n      const addUser = (id) => ({\r\n        type: SET_CHECKED_USER,\r\n        payload: [...checkedUsersId, id],\r\n      })\r\n      dispatch(addUser(id))\r\n    } else {\r\n      let newCheckedUsersId = checkedUsersId.filter((el) => el !== id)\r\n      const clearUser = (newCheckedUsersId) => ({\r\n        type: DELETE_CHECKED_USER,\r\n        payload: [...newCheckedUsersId],\r\n      })\r\n      dispatch(clearUser(newCheckedUsersId))\r\n    }\r\n  }\r\n}\r\nexport default toggleCheckedUser\r\n","import React, { useState } from 'react'\r\nimport toggleCheckedUser from '../../store/actions/actionsWithCheckedUsers/actionsWithCheckedUsers'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Proptypes from 'prop-types'\r\n\r\nconst CheckBox = ({ id }) => {\r\n  const checkedUsersId = useSelector(\r\n    (store) => store.actionsWithCheckedUsers.checkedUsersId\r\n  )\r\n  const [checked, setChecked] = useState(checkedUsersId.includes(id))\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <input\r\n      name=\"checked\"\r\n      type=\"checkbox\"\r\n      id={id}\r\n      checked={checked}\r\n      onChange={(e) => {\r\n        setChecked(e.target.checked)\r\n        dispatch(toggleCheckedUser(checkedUsersId, id))\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nCheckBox.propTypes = {\r\n  id: Proptypes.string,\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport CheckBox from '../Checkbox/CheckBox'\r\nimport Proptypes, { object } from 'prop-types'\r\n\r\nconst UserCard = ({ list }) => {\r\n  const letterUsersList = list.map((user) => {\r\n    return (\r\n      <li key={user.id} className=\"letter-list\">\r\n        <strong>\r\n          {user.lastName} {user.firstName}\r\n        </strong>\r\n        <CheckBox\r\n          id={user.id}\r\n          lastName={user.lastName}\r\n          firstName={user.firstName}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n  return <>{letterUsersList}</>\r\n}\r\n\r\nUserCard.propTypes = {\r\n  list: Proptypes.arrayOf(object),\r\n}\r\n\r\nexport default UserCard\r\n","import React, { useEffect, useState } from 'react'\r\nimport UserCard from '../UserCard/UsersCard'\r\nimport Proptypes, { object } from 'prop-types'\r\n\r\nconst UsersList = ({ usersList }) => {\r\n  const [structuredList, setStructuredList] = useState([])\r\n\r\n  useEffect(() => {\r\n    let list = filterElements(usersList, alphabet(65, 90))\r\n    setStructuredList(list)\r\n  }, [usersList])\r\n\r\n  const alphabet = (start, end) => {\r\n    let alphaList = []\r\n    for (let code = start; code <= end; code++) {\r\n      let alpha = String.fromCharCode(code).toUpperCase()\r\n      alphaList = [...alphaList, alpha]\r\n    }\r\n    return alphaList\r\n  }\r\n\r\n  const filterElements = (arr, filterArr) => {\r\n    let list = []\r\n    filterArr.forEach((filter) => {\r\n      let letterNameArr = arr.filter((e) =>\r\n        e.lastName.toUpperCase().startsWith(filter)\r\n      )\r\n      list = [...list, letterNameArr]\r\n    })\r\n    return list\r\n  }\r\n\r\n  const structuredUsersList = structuredList.map((alphaList, i) => {\r\n    let alpha = String.fromCharCode(i + 65)\r\n    let users =\r\n      alphaList.length === 0 ? (\r\n        <span>-----</span>\r\n      ) : (\r\n        <UserCard list={alphaList} />\r\n      )\r\n    return (\r\n      <div key={alpha} className=\"letter__employees\">\r\n        <h4 className=\"alpha-title\">{alpha}</h4>\r\n        <ul>{users}</ul>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h2> Employees</h2>\r\n      <div className=\"employees__wrap\">{structuredUsersList}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nUsersList.propTypes = {\r\n  usersList: Proptypes.arrayOf(object),\r\n}\r\n\r\nexport default UsersList\r\n","import {\r\n  REQUEST_USERS_SUCCESS,\r\n  REQUEST_USERS_IN_PROCESS,\r\n  REQUEST_USERS_ERROR,\r\n} from '../../constants'\r\nimport axios from 'axios'\r\n\r\nconst getUsersSuccess = (usersList) => ({\r\n  type: REQUEST_USERS_SUCCESS,\r\n  payload: [...usersList],\r\n})\r\nconst getUsersError = (error) => ({ type: REQUEST_USERS_ERROR, payload: error })\r\nconst getUsersInProcess = () => ({ type: REQUEST_USERS_IN_PROCESS })\r\n\r\nconst getUsersList = () => {\r\n  return (dispatch) => {\r\n    dispatch(getUsersInProcess())\r\n    axios\r\n      .get('https://yalantis-react-school-api.yalantis.com/api/task0/users')\r\n      .then((res) => {\r\n        dispatch(getUsersSuccess(res.data))\r\n      })\r\n      .catch((e) => {\r\n        dispatch(getUsersError(e.message))\r\n      })\r\n  }\r\n}\r\nexport default getUsersList\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Loaded = () => {\r\n  const isLoaded = useSelector((store) => store.getUsersList.isLoaded)\r\n\r\n  return (\r\n    !isLoaded && (\r\n      <div className=\"spinner\">\r\n        <div className=\"blob top\" />\r\n        <div className=\"blob bottom\" />\r\n        <div className=\"blob left\" />\r\n        <div className=\"blob move-blob\" />\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Loaded\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Proptypes, { object } from 'prop-types'\r\n\r\nconst EmployeesBirthday = ({ usersList }) => {\r\n  const checkedUsersId = useSelector(\r\n    (store) => store.actionsWithCheckedUsers.checkedUsersId\r\n  )\r\n  const [monthsNum, setMonthsNum] = useState([])\r\n  const [dobUsers, setBdUsers] = useState({})\r\n\r\n  const monthNames = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ]\r\n\r\n  const compareNumbers = (a, b) => {\r\n    return a - b\r\n  }\r\n\r\n  useEffect(() => {\r\n    let users = []\r\n    let dobs = []\r\n    let map = new Map()\r\n    checkedUsersId.forEach((id) => {\r\n      let user = usersList.find((el) => el.id === id)\r\n      users = [...users, user]\r\n      dobs = [...dobs, user.dob]\r\n    })\r\n    let monthNumber = dobs.map((date) => new Date(date).getMonth())\r\n    let result = monthNumber\r\n      .filter((item, index) => monthNumber.indexOf(item) === index)\r\n      .sort(compareNumbers)\r\n\r\n    result.forEach((el) => {\r\n      let x = []\r\n      users.forEach((user) => {\r\n        if (new Date(user.dob).getMonth() === el) {\r\n          x = [...x, user]\r\n          map.set(el, x)\r\n        }\r\n      })\r\n    })\r\n    setMonthsNum(result)\r\n    setBdUsers(map)\r\n    localStorage.setItem('checkedUsersId', JSON.stringify(checkedUsersId))\r\n  }, [checkedUsersId, usersList])\r\n\r\n  const formatDate = (date) => {\r\n    let day = date.getDate()\r\n    let monthIndex = date.getMonth()\r\n    let year = date.getFullYear()\r\n    return `${day} ${monthNames[monthIndex]}, ${year} year`\r\n  }\r\n\r\n  const implementLists = monthsNum.map((el) => {\r\n    let users = dobUsers.get(el)\r\n    let dobList = []\r\n    users.map((user) => {\r\n      let birthday = formatDate(new Date(user.dob))\r\n      return (dobList = [\r\n        ...dobList,\r\n        <li key={user.id} style={{ listStyleType: 'circle' }}>\r\n          <strong>\r\n            {user.lastName} {user.firstName}\r\n          </strong>{' '}\r\n          - {birthday}\r\n        </li>,\r\n      ])\r\n    })\r\n    return (\r\n      <div key={el}>\r\n        <h3>{monthNames[el]}</h3>\r\n        <ul>{dobList}</ul>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  const dobList =\r\n    checkedUsersId.length === 0 ? (\r\n      <h3>No selected employees</h3>\r\n    ) : (\r\n      <div className=\"birthday-wrap\">{implementLists}</div>\r\n    )\r\n\r\n  return (\r\n    <div className=\"dob__wrap\">\r\n      <h2> Employees Birthdays</h2>\r\n      {dobList}\r\n    </div>\r\n  )\r\n}\r\n\r\nEmployeesBirthday.propTypes = {\r\n  usersList: Proptypes.arrayOf(object),\r\n}\r\n\r\nexport default EmployeesBirthday\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport UsersList from '../../components/UsersList/UsersList'\r\nimport getUsersList from '../../store/actions/getUsersList/getUsersList'\r\nimport Loaded from '../../components/Loaded/Loaded'\r\nimport EmployeesBirthday from '../../components/EmployeesBirthday/EmployeesBirthday'\r\n\r\nconst EmployeesPage = () => {\r\n  const usersList = useSelector((store) => {\r\n    return store.getUsersList.usersList\r\n  })\r\n  const isLoaded = useSelector((store) => store.getUsersList.isLoaded)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => dispatch(getUsersList()), 2000)\r\n  }, [dispatch])\r\n\r\n  const mainPage = isLoaded ? (\r\n    <>\r\n      <UsersList usersList={usersList} />\r\n      <EmployeesBirthday usersList={usersList} />\r\n    </>\r\n  ) : (\r\n    <Loaded />\r\n  )\r\n\r\n  return <>{mainPage}</>\r\n}\r\n\r\nexport default EmployeesPage\r\n","import { Route, Switch, Redirect } from 'react-router-dom'\r\nimport EmployeesPage from '../pages/EmployeesPage/EmployeesPage'\r\nimport React from 'react'\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from='/' to='/employees' />\r\n      <Route exact path=\"/employees\" component={EmployeesPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default AppRoutes\r\n","import React from 'react'\nimport './App.css'\nimport AppRoutes from './routers/AppRouters'\n\nconst App = () => {\n  return (\n    <>\n      <AppRoutes />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  REQUEST_USERS_ERROR,\r\n  REQUEST_USERS_IN_PROCESS,\r\n  REQUEST_USERS_SUCCESS,\r\n} from '../../constants'\r\n\r\nconst initialStore = {\r\n  usersList: [],\r\n  isLoaded: false,\r\n  error: '',\r\n}\r\n\r\nconst getUsersReducer = (store = initialStore, action) => {\r\n  switch (action.type) {\r\n    case REQUEST_USERS_SUCCESS:\r\n      return {\r\n        ...store,\r\n        isLoaded: true,\r\n        usersList: action.payload,\r\n      }\r\n    case REQUEST_USERS_ERROR:\r\n      return {\r\n        ...store,\r\n        isLoaded: false,\r\n        error: action.payload,\r\n      }\r\n    case REQUEST_USERS_IN_PROCESS:\r\n      return {\r\n        ...store,\r\n        isLoaded: false,\r\n      }\r\n    default:\r\n      return store\r\n  }\r\n}\r\n\r\nexport default getUsersReducer\r\n","import { DELETE_CHECKED_USER, SET_CHECKED_USER } from '../../constants'\r\n\r\nconst initialStore = {\r\n  checkedUsersId: JSON.parse(localStorage.getItem('checkedUsersId')) || [],\r\n}\r\n\r\nconst actionsWithCheckedUsersReducer = (store = initialStore, action) => {\r\n  switch (action.type) {\r\n    case SET_CHECKED_USER:\r\n      return {\r\n        ...store,\r\n        checkedUsersId: action.payload,\r\n      }\r\n    case DELETE_CHECKED_USER:\r\n      return {\r\n        ...store,\r\n        checkedUsersId: action.payload,\r\n      }\r\n    default:\r\n      return store\r\n  }\r\n}\r\n\r\nexport default actionsWithCheckedUsersReducer\r\n","import {combineReducers} from \"redux\";\r\nimport getUsersReducer from \"./getUsersListReducer/getUsersListReducer\";\r\nimport actionsWithCheckedUsersReducer from \"./actionsWithCheckedUsersReducer/actionsWithCheckedUsersReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    getUsersList: getUsersReducer,\r\n    actionsWithCheckedUsers: actionsWithCheckedUsersReducer\r\n});","import {applyMiddleware, createStore, compose} from \"redux\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f => f);\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk), devTools)\r\n);\r\n\r\n\r\nexport default store;\r\n\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}